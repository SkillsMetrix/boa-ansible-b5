from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

SQLALCHEMY_DATABASE_URL = "sqlite:///./mytest.db"
 
engine = create_engine(
    SQLALCHEMY_DATABASE_URL, connect_args={"check_same_thread": False}
)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

Base = declarative_base()
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()




----


from sqlalchemy import Column,String

from .database import Base

class Student(Base):
    __tablename__="STUDENT"

    uname=Column(String,primary_key=True)
    email=Column(String)
    city=Column(String)


--------



from fastapi import FastAPI
from . approuting import router
from .database import engine
from . import models

models.Base.metadata.create_all(bind=engine)
  
app = FastAPI()

app.include_router(router)

